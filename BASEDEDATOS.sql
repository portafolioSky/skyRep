--------------------------------------------------------
-- Archivo creado  - sábado-octubre-15-2016   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence CIUDAD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "CIUDAD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence COMPONENTES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "COMPONENTES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence COMPONENTES_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "COMPONENTES_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CONDICION_VUELO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "CONDICION_VUELO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LICENCIA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "LICENCIA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MANTENIMIENTO_AERONAVE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MANTENIMIENTO_AERONAVE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MANTENIMIENTO_COMPONENTE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "MANTENIMIENTO_COMPONENTE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PAIS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PAIS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REGION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "REGION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ROL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ROL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TIPO_AERONAVE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TIPO_AERONAVE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TIPO_LICENCIA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TIPO_LICENCIA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TIPO_LICENCIA_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "TIPO_LICENCIA_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TRIPULACION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TRIPULACION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VUELO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "VUELO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence VUELO_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "VUELO_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table AERONAVE
--------------------------------------------------------

  CREATE TABLE "AERONAVE" 
   (	"MATRICULA" VARCHAR2(50 BYTE), 
	"MARCA" VARCHAR2(50 BYTE), 
	"MODELO" VARCHAR2(50 BYTE), 
	"FECHA_FABRICACION" DATE, 
	"HORAS_DE_VUELO" FLOAT(126), 
	"CERTIFICADO_DGAC" DATE, 
	"FECHA_VENCIMIENTO_DGAC" DATE, 
	"ESTADO_AERONAVE" VARCHAR2(20 BYTE), 
	"ID_TIPO_AERONAVE" NUMBER(*,0), 
	"KMPORHORAS" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CIUDAD
--------------------------------------------------------

  CREATE TABLE "CIUDAD" 
   (	"ID_CIUDAD" NUMBER(*,0), 
	"NOMBRE_CIUDAD" VARCHAR2(50 BYTE), 
	"ID_REGION" NUMBER(*,0), 
	"LATITUD" VARCHAR2(50 BYTE), 
	"LONGITUD" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COMPONENTE
--------------------------------------------------------

  CREATE TABLE "COMPONENTE" 
   (	"ID_COMPENTE" NUMBER(*,0), 
	"C_FECHA_VENCIMIENTO" DATE, 
	"AERONAVE_MATRICULA" VARCHAR2(50 BYTE), 
	"C_HORAS_VUELO" FLOAT(126), 
	"ID_PADRE" NUMBER(*,0), 
	"NOMBRE" VARCHAR2(20 BYTE), 
	"LIMITE_HORAS_VUELO" FLOAT(126), 
	"ESTADO" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CONDICION_VUELO
--------------------------------------------------------

  CREATE TABLE "CONDICION_VUELO" 
   (	"ID_CONDICION" NUMBER(*,0), 
	"NOMBRE_CONDICION" VARCHAR2(3 BYTE), 
	"DESCRIPCION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LICENCIA
--------------------------------------------------------

  CREATE TABLE "LICENCIA" 
   (	"ID_LICENCIA" NUMBER(*,0), 
	"FECHA_EMISION" DATE, 
	"FECHA_EXPIRACION" DATE, 
	"ESTADO_VIGENCIA" CHAR(1 BYTE), 
	"PERSONA_RUT" VARCHAR2(50 BYTE), 
	"ID_TIPO_LICENCIA" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MANTENIMIENTO_AERONAVE
--------------------------------------------------------

  CREATE TABLE "MANTENIMIENTO_AERONAVE" 
   (	"ID_MANTENIMIENTO_AERONAVE" NUMBER(*,0), 
	"MATRICULA_AERONAVE" VARCHAR2(50 BYTE), 
	"FECHA_INSPECCION" DATE, 
	"ESTADO" VARCHAR2(20 BYTE), 
	"RUT_ENCARGADO" VARCHAR2(11 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MANTENIMIENTO_COMPONENTE
--------------------------------------------------------

  CREATE TABLE "MANTENIMIENTO_COMPONENTE" 
   (	"ID_MANTENIMIENTO_COMPONENTE" NUMBER, 
	"ID_COMPONENTE" NUMBER, 
	"FECHA_INSPECCION" DATE, 
	"RUT_ENCARGADO" VARCHAR2(11 BYTE), 
	"ESTADO" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PAIS
--------------------------------------------------------

  CREATE TABLE "PAIS" 
   (	"ID_PAIS" NUMBER(*,0), 
	"NOMBRE_PAIS" VARCHAR2(50 BYTE), 
	"LATITUD" VARCHAR2(50 BYTE), 
	"LONGITUD" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table REGION
--------------------------------------------------------

  CREATE TABLE "REGION" 
   (	"ID_REGION" NUMBER(*,0), 
	"NOMBRE_REGION" VARCHAR2(50 BYTE), 
	"ID_PAIS" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ROL
--------------------------------------------------------

  CREATE TABLE "ROL" 
   (	"ID_ROL" NUMBER(*,0), 
	"NOMBRE_ROL" VARCHAR2(50 BYTE), 
	"DESCRIPCION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TIPO_AERONAVE
--------------------------------------------------------

  CREATE TABLE "TIPO_AERONAVE" 
   (	"ID_TIPO_AERONAVE" NUMBER(*,0), 
	"NOMBRE_TIPO" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TIPO_LICENCIA
--------------------------------------------------------

  CREATE TABLE "TIPO_LICENCIA" 
   (	"ID_TIPO_LICENCIA" NUMBER(*,0), 
	"DESCRIPCION" VARCHAR2(50 BYTE), 
	"NOMBRE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TRIPULACION
--------------------------------------------------------

  CREATE TABLE "TRIPULACION" 
   (	"ID" NUMBER(*,0), 
	"CANT_HORAS_VUELO" FLOAT(126), 
	"VUELO_ID_VUELO" NUMBER(*,0), 
	"RUT_PILOTO" VARCHAR2(11 BYTE), 
	"PUESTO" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table USUARIO
--------------------------------------------------------

  CREATE TABLE "USUARIO" 
   (	"RUT" VARCHAR2(11 BYTE), 
	"NOMBRE" VARCHAR2(50 BYTE), 
	"AP_PATERNO" VARCHAR2(50 BYTE), 
	"AP_MATERENO" VARCHAR2(50 BYTE), 
	"USUARIO" VARCHAR2(50 BYTE), 
	"PASS" VARCHAR2(50 BYTE), 
	"CORREO" VARCHAR2(50 BYTE), 
	"ROL_ID_ROL" NUMBER(*,0), 
	"FECHA_MEDICINA_AEROESPACIAL" DATE, 
	"ESTADO" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VUELO
--------------------------------------------------------

  CREATE TABLE "VUELO" 
   (	"ID_VUELO" NUMBER(*,0), 
	"FECHA_SALIDA" DATE, 
	"FECHA_ARRIBO" DATE, 
	"TOTAL_TIEMPO" FLOAT(126), 
	"CONDICION_VUELO_ID_CONDICION" NUMBER(*,0), 
	"AERONAVE_MATRICULA" VARCHAR2(50 BYTE), 
	"ID_ORIGEN_CIUDAD" NUMBER(*,0), 
	"ID_DESTINO_CIUDAD" NUMBER(*,0), 
	"ESTADO" VARCHAR2(20 BYTE), 
	"KILOMETROS" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into AERONAVE
SET DEFINE OFF;
Insert into AERONAVE (MATRICULA,MARCA,MODELO,FECHA_FABRICACION,HORAS_DE_VUELO,CERTIFICADO_DGAC,FECHA_VENCIMIENTO_DGAC,ESTADO_AERONAVE,ID_TIPO_AERONAVE,KMPORHORAS) values ('9mu4-2','Avianca','bhirtgkyxa',to_date('22/04/05','DD/MM/RR'),'560',to_date('13/09/16','DD/MM/RR'),to_date('13/09/17','DD/MM/RR'),'OPERATIVA','1','800');
Insert into AERONAVE (MATRICULA,MARCA,MODELO,FECHA_FABRICACION,HORAS_DE_VUELO,CERTIFICADO_DGAC,FECHA_VENCIMIENTO_DGAC,ESTADO_AERONAVE,ID_TIPO_AERONAVE,KMPORHORAS) values ('e8m1-h','Navy','dcrgjlcfgb',to_date('22/04/01','DD/MM/RR'),'980',to_date('20/03/16','DD/MM/RR'),to_date('20/03/17','DD/MM/RR'),'OPERATIVA','1','750');
Insert into AERONAVE (MATRICULA,MARCA,MODELO,FECHA_FABRICACION,HORAS_DE_VUELO,CERTIFICADO_DGAC,FECHA_VENCIMIENTO_DGAC,ESTADO_AERONAVE,ID_TIPO_AERONAVE,KMPORHORAS) values ('jreh-g','Greven','bpgzmbwegj',to_date('19/02/03','DD/MM/RR'),'750',to_date('12/06/16','DD/MM/RR'),to_date('12/06/17','DD/MM/RR'),'OPERATIVA','1','1000');
Insert into AERONAVE (MATRICULA,MARCA,MODELO,FECHA_FABRICACION,HORAS_DE_VUELO,CERTIFICADO_DGAC,FECHA_VENCIMIENTO_DGAC,ESTADO_AERONAVE,ID_TIPO_AERONAVE,KMPORHORAS) values ('g6da-5','Kavan','bbysbmqcnt',to_date('10/12/99','DD/MM/RR'),'1500',to_date('04/04/16','DD/MM/RR'),to_date('04/04/17','DD/MM/RR'),'OPERATIVA','2','500');
Insert into AERONAVE (MATRICULA,MARCA,MODELO,FECHA_FABRICACION,HORAS_DE_VUELO,CERTIFICADO_DGAC,FECHA_VENCIMIENTO_DGAC,ESTADO_AERONAVE,ID_TIPO_AERONAVE,KMPORHORAS) values ('uz5z-d','Foster','claxzsiosa',to_date('12/06/92','DD/MM/RR'),'560',to_date('25/03/15','DD/MM/RR'),to_date('25/03/16','DD/MM/RR'),'FUERA DE VUELO','2','400');
REM INSERTING into CIUDAD
SET DEFINE OFF;
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('1','Puente Alto','15','33,5954954','70,5968088');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('2','Santiago','15','33,4727091','70,7699159');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('3','San Bernardo','15','33,6402253','70,8686227');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('4','Melipilla','15','33,6879233','71,2254047');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('5','Concepción','9','36,8262787','73,1030856');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('6','Talcahuano','9','36,7305116','73,1770665');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('7','Chillán','9','36,6124847','72,1387312');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('8','Los Ángeles','9','37,4662257','72,3875091');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('9','Viña del Mar','6','33,0291861','71,5850865');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('10','Valparaíso','6','33,0507032','71,6460681');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('11','Temuco','10','38,7290843','72,6377405');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('12','Antofagasta','3','23,6283541','70,4745389');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('13','Calama','3','22,4612687','68,958405');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('14','Rancagua','7','34,1594625','70,7737187');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('15','Arica','1','18,4724734','70,7737187');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('16','Talca','8','35,4260315','71,6888776');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('17','Curicó','8','34,9810167','71,2452981');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('18','Iquique','2','20,2448126','70,1738687');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('19','Puerto Montt','12','41,4625414','72,9830376');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('20','Osorno','12','40,5737033','73,1691503');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('21','Coquimbo','5','29,9705574','71,3337099');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('22','La Serena','5','29,9077833','71,2791892');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('23','Ovalle','5','30,5921708','71,2231878');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('24','Valdivia','11','39,7444283','73,204505');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('25','Punta Arenas','14','53,1417468','70,9763067');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('26','Copiapó','4','27,3772623','70,3560285');
Insert into CIUDAD (ID_CIUDAD,NOMBRE_CIUDAD,ID_REGION,LATITUD,LONGITUD) values ('27','Quilpué','6','33,0518022','71,4605651');
REM INSERTING into COMPONENTE
SET DEFINE OFF;
Insert into COMPONENTE (ID_COMPENTE,C_FECHA_VENCIMIENTO,AERONAVE_MATRICULA,C_HORAS_VUELO,ID_PADRE,NOMBRE,LIMITE_HORAS_VUELO,ESTADO) values ('1',to_date('03/12/17','DD/MM/RR'),'9mu4-2','560',null,'Motor','5000','OPERATIVO');
Insert into COMPONENTE (ID_COMPENTE,C_FECHA_VENCIMIENTO,AERONAVE_MATRICULA,C_HORAS_VUELO,ID_PADRE,NOMBRE,LIMITE_HORAS_VUELO,ESTADO) values ('2',to_date('03/12/17','DD/MM/RR'),'9mu4-2','200','1','Ventilador','5000','OPERATIVO');
Insert into COMPONENTE (ID_COMPENTE,C_FECHA_VENCIMIENTO,AERONAVE_MATRICULA,C_HORAS_VUELO,ID_PADRE,NOMBRE,LIMITE_HORAS_VUELO,ESTADO) values ('3',to_date('20/11/18','DD/MM/RR'),'9mu4-2','100','1','Bujia','5000','OPERATIVO');
Insert into COMPONENTE (ID_COMPENTE,C_FECHA_VENCIMIENTO,AERONAVE_MATRICULA,C_HORAS_VUELO,ID_PADRE,NOMBRE,LIMITE_HORAS_VUELO,ESTADO) values ('4',to_date('03/11/19','DD/MM/RR'),'9mu4-2','560','1','Turbina','5000','OPERATIVO');
Insert into COMPONENTE (ID_COMPENTE,C_FECHA_VENCIMIENTO,AERONAVE_MATRICULA,C_HORAS_VUELO,ID_PADRE,NOMBRE,LIMITE_HORAS_VUELO,ESTADO) values ('5',to_date('18/04/17','DD/MM/RR'),'9mu4-2','350','1','Compresor','5000','OPERATIVO');
Insert into COMPONENTE (ID_COMPENTE,C_FECHA_VENCIMIENTO,AERONAVE_MATRICULA,C_HORAS_VUELO,ID_PADRE,NOMBRE,LIMITE_HORAS_VUELO,ESTADO) values ('6',to_date('20/11/18','DD/MM/RR'),'9mu4-2','100','1','Inyector','5000','OPERATIVO');
Insert into COMPONENTE (ID_COMPENTE,C_FECHA_VENCIMIENTO,AERONAVE_MATRICULA,C_HORAS_VUELO,ID_PADRE,NOMBRE,LIMITE_HORAS_VUELO,ESTADO) values ('7',to_date('20/02/20','DD/MM/RR'),'9mu4-2','560',null,'Ala','5000','OPERATIVO');
Insert into COMPONENTE (ID_COMPENTE,C_FECHA_VENCIMIENTO,AERONAVE_MATRICULA,C_HORAS_VUELO,ID_PADRE,NOMBRE,LIMITE_HORAS_VUELO,ESTADO) values ('8',to_date('20/02/17','DD/MM/RR'),'9mu4-2','100','7','Aleron','5000','OPERATIVO');
Insert into COMPONENTE (ID_COMPENTE,C_FECHA_VENCIMIENTO,AERONAVE_MATRICULA,C_HORAS_VUELO,ID_PADRE,NOMBRE,LIMITE_HORAS_VUELO,ESTADO) values ('9',to_date('20/02/17','DD/MM/RR'),'9mu4-2','560','7','Flap','5000','OPERATIVO');
REM INSERTING into CONDICION_VUELO
SET DEFINE OFF;
Insert into CONDICION_VUELO (ID_CONDICION,NOMBRE_CONDICION,DESCRIPCION) values ('1','IFR','De tipo instrumentos');
Insert into CONDICION_VUELO (ID_CONDICION,NOMBRE_CONDICION,DESCRIPCION) values ('2','VFR','De tipo visual');
REM INSERTING into LICENCIA
SET DEFINE OFF;
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('1',to_date('12/09/15','DD/MM/RR'),to_date('12/09/17','DD/MM/RR'),'t','16533989-4','3');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('2',to_date('08/04/15','DD/MM/RR'),to_date('08/04/17','DD/MM/RR'),'t','17594659-4','3');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('3',to_date('20/04/16','DD/MM/RR'),to_date('20/04/18','DD/MM/RR'),'t','17594659-4','2');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('4',to_date('05/12/16','DD/MM/RR'),to_date('05/12/18','DD/MM/RR'),'t','9557510-2','3');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('5',to_date('22/01/16','DD/MM/RR'),to_date('22/01/18','DD/MM/RR'),'t','17911818-1','3');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('6',to_date('21/08/12','DD/MM/RR'),to_date('21/08/14','DD/MM/RR'),'f','19206741-3','3');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('7',to_date('14/07/15','DD/MM/RR'),to_date('14/07/17','DD/MM/RR'),'t','18751869-5','2');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('8',to_date('02/04/15','DD/MM/RR'),to_date('02/04/15','DD/MM/RR'),'t','17899579-0','2');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('9',to_date('17/10/16','DD/MM/RR'),to_date('17/10/18','DD/MM/RR'),'t','18691926-2','2');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('10',to_date('15/02/10','DD/MM/RR'),to_date('21/12/16','DD/MM/RR'),'t','13828801-3','2');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('11',to_date('09/08/15','DD/MM/RR'),to_date('09/08/17','DD/MM/RR'),'t','19609576-4','2');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('12',to_date('18/06/13','DD/MM/RR'),to_date('18/06/15','DD/MM/RR'),'f','15405899-0','2');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('21',to_date('12/09/15','DD/MM/RR'),to_date('12/09/17','DD/MM/RR'),'t','16533989-4','2');
Insert into LICENCIA (ID_LICENCIA,FECHA_EMISION,FECHA_EXPIRACION,ESTADO_VIGENCIA,PERSONA_RUT,ID_TIPO_LICENCIA) values ('22',to_date('12/09/15','DD/MM/RR'),to_date('12/09/17','DD/MM/RR'),'t','19609576-4','3');
REM INSERTING into MANTENIMIENTO_AERONAVE
SET DEFINE OFF;
Insert into MANTENIMIENTO_AERONAVE (ID_MANTENIMIENTO_AERONAVE,MATRICULA_AERONAVE,FECHA_INSPECCION,ESTADO,RUT_ENCARGADO) values ('3','e8m1-h',to_date('25/10/16','DD/MM/RR'),'PENDIENTE','17912001-1');
Insert into MANTENIMIENTO_AERONAVE (ID_MANTENIMIENTO_AERONAVE,MATRICULA_AERONAVE,FECHA_INSPECCION,ESTADO,RUT_ENCARGADO) values ('4','e8m1-h',to_date('26/10/16','DD/MM/RR'),'PENDIENTE','18691660-3');
Insert into MANTENIMIENTO_AERONAVE (ID_MANTENIMIENTO_AERONAVE,MATRICULA_AERONAVE,FECHA_INSPECCION,ESTADO,RUT_ENCARGADO) values ('5','jreh-g',to_date('27/10/16','DD/MM/RR'),'PENDIENTE','17012168-9');
Insert into MANTENIMIENTO_AERONAVE (ID_MANTENIMIENTO_AERONAVE,MATRICULA_AERONAVE,FECHA_INSPECCION,ESTADO,RUT_ENCARGADO) values ('7','g6da-5',to_date('29/10/16','DD/MM/RR'),'PENDIENTE','17912001-1');
Insert into MANTENIMIENTO_AERONAVE (ID_MANTENIMIENTO_AERONAVE,MATRICULA_AERONAVE,FECHA_INSPECCION,ESTADO,RUT_ENCARGADO) values ('8','g6da-5',to_date('30/10/16','DD/MM/RR'),'PENDIENTE','18691660-3');
Insert into MANTENIMIENTO_AERONAVE (ID_MANTENIMIENTO_AERONAVE,MATRICULA_AERONAVE,FECHA_INSPECCION,ESTADO,RUT_ENCARGADO) values ('9','uz5z-d',to_date('31/10/16','DD/MM/RR'),'PENDIENTE','17012168-9');
Insert into MANTENIMIENTO_AERONAVE (ID_MANTENIMIENTO_AERONAVE,MATRICULA_AERONAVE,FECHA_INSPECCION,ESTADO,RUT_ENCARGADO) values ('10','uz5z-d',to_date('01/11/16','DD/MM/RR'),'PENDIENTE','18691660-3');
Insert into MANTENIMIENTO_AERONAVE (ID_MANTENIMIENTO_AERONAVE,MATRICULA_AERONAVE,FECHA_INSPECCION,ESTADO,RUT_ENCARGADO) values ('2','9mu4-2',to_date('24/10/16','DD/MM/RR'),'REVISION','16193691k');
Insert into MANTENIMIENTO_AERONAVE (ID_MANTENIMIENTO_AERONAVE,MATRICULA_AERONAVE,FECHA_INSPECCION,ESTADO,RUT_ENCARGADO) values ('6','jreh-g',to_date('28/10/16','DD/MM/RR'),'PENDIENTE','16193691k');
REM INSERTING into MANTENIMIENTO_COMPONENTE
SET DEFINE OFF;
REM INSERTING into PAIS
SET DEFINE OFF;
Insert into PAIS (ID_PAIS,NOMBRE_PAIS,LATITUD,LONGITUD) values ('1','chile','35.3608734','89.1127684');
REM INSERTING into REGION
SET DEFINE OFF;
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('1','Arica y Parinacota','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('2','Tarapacá','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('3','Antofagasta','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('4','Atacama','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('5','Coquimbo','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('6','Valparaíso','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('7','O Higgins','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('8','Maule','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('9','Biobío','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('10','La Araucanía','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('11','Los Ríos','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('12','Los Lagos','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('13','Aysén','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('14','Magallanes y Antártica','1');
Insert into REGION (ID_REGION,NOMBRE_REGION,ID_PAIS) values ('15','Metropolitana de Santiago','1');
REM INSERTING into ROL
SET DEFINE OFF;
Insert into ROL (ID_ROL,NOMBRE_ROL,DESCRIPCION) values ('1','administrador','el adminsitrador');
Insert into ROL (ID_ROL,NOMBRE_ROL,DESCRIPCION) values ('2','operador','el operador');
Insert into ROL (ID_ROL,NOMBRE_ROL,DESCRIPCION) values ('3','piloto','el piloto');
Insert into ROL (ID_ROL,NOMBRE_ROL,DESCRIPCION) values ('5','Desactivado','Usuario desactivado');
Insert into ROL (ID_ROL,NOMBRE_ROL,DESCRIPCION) values ('4','consultor','el consultor');
REM INSERTING into TIPO_AERONAVE
SET DEFINE OFF;
Insert into TIPO_AERONAVE (ID_TIPO_AERONAVE,NOMBRE_TIPO) values ('1','Avión');
Insert into TIPO_AERONAVE (ID_TIPO_AERONAVE,NOMBRE_TIPO) values ('2','Helicóptero');
REM INSERTING into TIPO_LICENCIA
SET DEFINE OFF;
Insert into TIPO_LICENCIA (ID_TIPO_LICENCIA,DESCRIPCION,NOMBRE) values ('1','Aspirante a piloto','Alumno-Helicóptero');
Insert into TIPO_LICENCIA (ID_TIPO_LICENCIA,DESCRIPCION,NOMBRE) values ('2','Piloto de helicoptero','Piloto-Helicóptero');
Insert into TIPO_LICENCIA (ID_TIPO_LICENCIA,DESCRIPCION,NOMBRE) values ('3','Piloto de Avion','Piloto-Avión');
Insert into TIPO_LICENCIA (ID_TIPO_LICENCIA,DESCRIPCION,NOMBRE) values ('4','Aspirante a piloto','Alumno-Avión');
REM INSERTING into TRIPULACION
SET DEFINE OFF;
Insert into TRIPULACION (ID,CANT_HORAS_VUELO,VUELO_ID_VUELO,RUT_PILOTO,PUESTO) values ('45','2,58','32','19609576-4','Piloto');
Insert into TRIPULACION (ID,CANT_HORAS_VUELO,VUELO_ID_VUELO,RUT_PILOTO,PUESTO) values ('46','1,72','32','18691926-2','Copiloto');
REM INSERTING into USUARIO
SET DEFINE OFF;
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('18027668-8','jose','zuñiga','tapia','jzuniga','prueba','jzuniga@gmail.com','1',null,'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('17912001-1','Mauricio','Andrade','Arteaga','mandrade','mandrade','m.andrade@vuelos.com','2',null,'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('18691660-3','Cesar','Barrientos','Chiguay','cbarrientos','cbarrientos','c.barrientos@vuelos.com','2',null,'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('16533989-4','Mario','Retamal','Paredes','mretamal','mretamal','mretamal@vuelos.com','3',null,'DESACTIVADO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('17594659-4','Julio','Avendaño','Quezada','javendaño','javendaño','javendaño@vuelos.com','3',null,'DESACTIVADO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('9557510-2','Benito','Gomez','Mansilla','bgomez','bgomez','bgomez@vuelos.com','3',null,'DESACTIVADO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('17911818-1','Susana','Muñoz','Contreras','scontreras','scontreras','scontreras@vuelos.com','3',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('19206741-3','Maria','Cardenas','Lepio','mcardenas','mcardenas','mcardenas@vuelos.com','3',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('18751869-5','Diego','Barrios','Perez','dbarrios','dbarrios','dbarrios@vuelos.com','3',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('17899579-0','Jhon','Espinoza','Pereira','jpereira','jpereira','jpereira@vuelos.com','3',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('18923003-6','Bernardo','Pavez','Pino','Bpavez','Bpavez','Bpavez@vuelos.com','4',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('16561084-9','Simon','Figueroa','Vergara','sfigueroa','sfigueroa','sfigueroa@vuelos.com','4',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('18685382-2','Rodrigo','Herrera','Daza','rherrera','rherrera','rherrera@vuelos.com','4',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('18691926-2','Sergio','Urrutia','Garrido','surrutia','surrutia','surrutia@vuelos.com','3',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('13828801-3','John','Barril','Arenas','jbarril','jbarril','jbarril@vuelos.com','3',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('19609576-4','Nicolas','Silva','Gonzalez','nsilva','nsilva','nsilva@vuelos.com','3',to_date('02/12/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('15405899-0','alejandro','Peña','Galvez','apeña','apeña','apeña@vuelos.com','3',to_date('10/10/16','DD/MM/RR'),'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('17012168-9','Patricio','Rojas','Vilchez','operador','operador','projas@operador.com','2',null,'ACTIVO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('114445523','pito','pito','pito','piloto','piloto','pito','5',null,'DESACTIVADO');
Insert into USUARIO (RUT,NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,PASS,CORREO,ROL_ID_ROL,FECHA_MEDICINA_AEROESPACIAL,ESTADO) values ('16193691k','Daniel','Rojos','Rojas','drojosr','klgh69','drojosr@gmail.com','2',null,'ACTIVO');
REM INSERTING into VUELO
SET DEFINE OFF;
Insert into VUELO (ID_VUELO,FECHA_SALIDA,FECHA_ARRIBO,TOTAL_TIEMPO,CONDICION_VUELO_ID_CONDICION,AERONAVE_MATRICULA,ID_ORIGEN_CIUDAD,ID_DESTINO_CIUDAD,ESTADO,KILOMETROS) values ('32',to_date('14/10/16','DD/MM/RR'),to_date('14/10/16','DD/MM/RR'),'4,3','2','g6da-5','1','25','EN PROCESO','2173,65');
--------------------------------------------------------
--  DDL for Index LICENCIA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "LICENCIA_PK" ON "LICENCIA" ("ID_LICENCIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index VUELO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "VUELO_PK" ON "VUELO" ("ID_VUELO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ROL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ROL_PK" ON "ROL" ("ID_ROL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PERSONA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PERSONA_PK" ON "USUARIO" ("RUT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MANTENIMIENTOS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MANTENIMIENTOS_PK" ON "MANTENIMIENTO_AERONAVE" ("ID_MANTENIMIENTO_AERONAVE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PAIS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PAIS_PK" ON "PAIS" ("ID_PAIS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index MANTENIMIENTOS_PLANIFICADO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MANTENIMIENTOS_PLANIFICADO_PK" ON "MANTENIMIENTO_COMPONENTE" ("ID_MANTENIMIENTO_COMPONENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CIUDAD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CIUDAD_PK" ON "CIUDAD" ("ID_CIUDAD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COMPONENTES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "COMPONENTES_PK" ON "COMPONENTE" ("ID_COMPENTE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index AERONAVE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "AERONAVE_PK" ON "AERONAVE" ("MATRICULA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REGION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "REGION_PK" ON "REGION" ("ID_REGION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SEG_HORAS_VUELO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SEG_HORAS_VUELO_PK" ON "TRIPULACION" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CONDICION_VUELO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "CONDICION_VUELO_PK" ON "CONDICION_VUELO" ("ID_CONDICION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIPO_LICENCIA_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TIPO_LICENCIA_PK" ON "TIPO_LICENCIA" ("ID_TIPO_LICENCIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TIPO_AERONAVE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TIPO_AERONAVE_PK" ON "TIPO_AERONAVE" ("ID_TIPO_AERONAVE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table CONDICION_VUELO
--------------------------------------------------------

  ALTER TABLE "CONDICION_VUELO" ADD CONSTRAINT "CONDICION_VUELO_PK" PRIMARY KEY ("ID_CONDICION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "CONDICION_VUELO" MODIFY ("NOMBRE_CONDICION" NOT NULL ENABLE);
  ALTER TABLE "CONDICION_VUELO" MODIFY ("ID_CONDICION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TIPO_AERONAVE
--------------------------------------------------------

  ALTER TABLE "TIPO_AERONAVE" ADD CONSTRAINT "TIPO_AERONAVE_PK" PRIMARY KEY ("ID_TIPO_AERONAVE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TIPO_AERONAVE" MODIFY ("NOMBRE_TIPO" NOT NULL ENABLE);
  ALTER TABLE "TIPO_AERONAVE" MODIFY ("ID_TIPO_AERONAVE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROL
--------------------------------------------------------

  ALTER TABLE "ROL" ADD CONSTRAINT "ROL_PK" PRIMARY KEY ("ID_ROL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ROL" MODIFY ("DESCRIPCION" NOT NULL ENABLE);
  ALTER TABLE "ROL" MODIFY ("NOMBRE_ROL" NOT NULL ENABLE);
  ALTER TABLE "ROL" MODIFY ("ID_ROL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CIUDAD
--------------------------------------------------------

  ALTER TABLE "CIUDAD" MODIFY ("LONGITUD" NOT NULL ENABLE);
  ALTER TABLE "CIUDAD" MODIFY ("LATITUD" NOT NULL ENABLE);
  ALTER TABLE "CIUDAD" ADD CONSTRAINT "CIUDAD_PK" PRIMARY KEY ("ID_CIUDAD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "CIUDAD" MODIFY ("ID_REGION" NOT NULL ENABLE);
  ALTER TABLE "CIUDAD" MODIFY ("NOMBRE_CIUDAD" NOT NULL ENABLE);
  ALTER TABLE "CIUDAD" MODIFY ("ID_CIUDAD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VUELO
--------------------------------------------------------

  ALTER TABLE "VUELO" MODIFY ("KILOMETROS" NOT NULL ENABLE);
  ALTER TABLE "VUELO" MODIFY ("ESTADO" NOT NULL ENABLE);
  ALTER TABLE "VUELO" ADD CONSTRAINT "VUELO_PK" PRIMARY KEY ("ID_VUELO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "VUELO" MODIFY ("ID_DESTINO_CIUDAD" NOT NULL ENABLE);
  ALTER TABLE "VUELO" MODIFY ("ID_ORIGEN_CIUDAD" NOT NULL ENABLE);
  ALTER TABLE "VUELO" MODIFY ("AERONAVE_MATRICULA" NOT NULL ENABLE);
  ALTER TABLE "VUELO" MODIFY ("CONDICION_VUELO_ID_CONDICION" NOT NULL ENABLE);
  ALTER TABLE "VUELO" MODIFY ("TOTAL_TIEMPO" NOT NULL ENABLE);
  ALTER TABLE "VUELO" MODIFY ("FECHA_ARRIBO" NOT NULL ENABLE);
  ALTER TABLE "VUELO" MODIFY ("FECHA_SALIDA" NOT NULL ENABLE);
  ALTER TABLE "VUELO" MODIFY ("ID_VUELO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MANTENIMIENTO_AERONAVE
--------------------------------------------------------

  ALTER TABLE "MANTENIMIENTO_AERONAVE" ADD CONSTRAINT "MANTENIMIENTOS_PK" PRIMARY KEY ("ID_MANTENIMIENTO_AERONAVE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MANTENIMIENTO_AERONAVE" MODIFY ("ESTADO" NOT NULL ENABLE);
  ALTER TABLE "MANTENIMIENTO_AERONAVE" MODIFY ("FECHA_INSPECCION" NOT NULL ENABLE);
  ALTER TABLE "MANTENIMIENTO_AERONAVE" MODIFY ("MATRICULA_AERONAVE" NOT NULL ENABLE);
  ALTER TABLE "MANTENIMIENTO_AERONAVE" MODIFY ("ID_MANTENIMIENTO_AERONAVE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COMPONENTE
--------------------------------------------------------

  ALTER TABLE "COMPONENTE" MODIFY ("ESTADO" NOT NULL ENABLE);
  ALTER TABLE "COMPONENTE" MODIFY ("LIMITE_HORAS_VUELO" NOT NULL ENABLE);
  ALTER TABLE "COMPONENTE" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "COMPONENTE" ADD CONSTRAINT "COMPONENTES_PK" PRIMARY KEY ("ID_COMPENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "COMPONENTE" MODIFY ("C_HORAS_VUELO" NOT NULL ENABLE);
  ALTER TABLE "COMPONENTE" MODIFY ("AERONAVE_MATRICULA" NOT NULL ENABLE);
  ALTER TABLE "COMPONENTE" MODIFY ("C_FECHA_VENCIMIENTO" NOT NULL ENABLE);
  ALTER TABLE "COMPONENTE" MODIFY ("ID_COMPENTE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LICENCIA
--------------------------------------------------------

  ALTER TABLE "LICENCIA" MODIFY ("ID_TIPO_LICENCIA" NOT NULL ENABLE);
  ALTER TABLE "LICENCIA" MODIFY ("PERSONA_RUT" NOT NULL ENABLE);
  ALTER TABLE "LICENCIA" ADD CONSTRAINT "LICENCIA_PK" PRIMARY KEY ("ID_LICENCIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "LICENCIA" MODIFY ("ESTADO_VIGENCIA" NOT NULL ENABLE);
  ALTER TABLE "LICENCIA" MODIFY ("FECHA_EXPIRACION" NOT NULL ENABLE);
  ALTER TABLE "LICENCIA" MODIFY ("FECHA_EMISION" NOT NULL ENABLE);
  ALTER TABLE "LICENCIA" MODIFY ("ID_LICENCIA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TIPO_LICENCIA
--------------------------------------------------------

  ALTER TABLE "TIPO_LICENCIA" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "TIPO_LICENCIA" ADD CONSTRAINT "TIPO_LICENCIA_PK" PRIMARY KEY ("ID_TIPO_LICENCIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TIPO_LICENCIA" MODIFY ("ID_TIPO_LICENCIA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TRIPULACION
--------------------------------------------------------

  ALTER TABLE "TRIPULACION" MODIFY ("PUESTO" NOT NULL ENABLE);
  ALTER TABLE "TRIPULACION" ADD CONSTRAINT "SEG_HORAS_VUELO_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "TRIPULACION" MODIFY ("VUELO_ID_VUELO" NOT NULL ENABLE);
  ALTER TABLE "TRIPULACION" MODIFY ("RUT_PILOTO" NOT NULL ENABLE);
  ALTER TABLE "TRIPULACION" MODIFY ("CANT_HORAS_VUELO" NOT NULL ENABLE);
  ALTER TABLE "TRIPULACION" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AERONAVE
--------------------------------------------------------

  ALTER TABLE "AERONAVE" MODIFY ("KMPORHORAS" NOT NULL ENABLE);
  ALTER TABLE "AERONAVE" ADD CONSTRAINT "AERONAVE_PK" PRIMARY KEY ("MATRICULA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "AERONAVE" MODIFY ("ID_TIPO_AERONAVE" NOT NULL ENABLE);
  ALTER TABLE "AERONAVE" MODIFY ("ESTADO_AERONAVE" NOT NULL ENABLE);
  ALTER TABLE "AERONAVE" MODIFY ("FECHA_VENCIMIENTO_DGAC" NOT NULL ENABLE);
  ALTER TABLE "AERONAVE" MODIFY ("CERTIFICADO_DGAC" NOT NULL ENABLE);
  ALTER TABLE "AERONAVE" MODIFY ("HORAS_DE_VUELO" NOT NULL ENABLE);
  ALTER TABLE "AERONAVE" MODIFY ("FECHA_FABRICACION" NOT NULL ENABLE);
  ALTER TABLE "AERONAVE" MODIFY ("MODELO" NOT NULL ENABLE);
  ALTER TABLE "AERONAVE" MODIFY ("MARCA" NOT NULL ENABLE);
  ALTER TABLE "AERONAVE" MODIFY ("MATRICULA" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PAIS
--------------------------------------------------------

  ALTER TABLE "PAIS" MODIFY ("LONGITUD" NOT NULL ENABLE);
  ALTER TABLE "PAIS" MODIFY ("LATITUD" NOT NULL ENABLE);
  ALTER TABLE "PAIS" ADD CONSTRAINT "PAIS_PK" PRIMARY KEY ("ID_PAIS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "PAIS" MODIFY ("NOMBRE_PAIS" NOT NULL ENABLE);
  ALTER TABLE "PAIS" MODIFY ("ID_PAIS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REGION
--------------------------------------------------------

  ALTER TABLE "REGION" ADD CONSTRAINT "REGION_PK" PRIMARY KEY ("ID_REGION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "REGION" MODIFY ("ID_PAIS" NOT NULL ENABLE);
  ALTER TABLE "REGION" MODIFY ("NOMBRE_REGION" NOT NULL ENABLE);
  ALTER TABLE "REGION" MODIFY ("ID_REGION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MANTENIMIENTO_COMPONENTE
--------------------------------------------------------

  ALTER TABLE "MANTENIMIENTO_COMPONENTE" MODIFY ("FECHA_INSPECCION" NOT NULL ENABLE);
  ALTER TABLE "MANTENIMIENTO_COMPONENTE" ADD CONSTRAINT "MANTENIMIENTOS_PLANIFICADO_PK" PRIMARY KEY ("ID_MANTENIMIENTO_COMPONENTE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "MANTENIMIENTO_COMPONENTE" MODIFY ("ID_COMPONENTE" NOT NULL ENABLE);
  ALTER TABLE "MANTENIMIENTO_COMPONENTE" MODIFY ("ID_MANTENIMIENTO_COMPONENTE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table USUARIO
--------------------------------------------------------

  ALTER TABLE "USUARIO" MODIFY ("ESTADO" NOT NULL ENABLE);
  ALTER TABLE "USUARIO" ADD CONSTRAINT "PERSONA_PK" PRIMARY KEY ("RUT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "USUARIO" MODIFY ("CORREO" NOT NULL ENABLE);
  ALTER TABLE "USUARIO" MODIFY ("PASS" NOT NULL ENABLE);
  ALTER TABLE "USUARIO" MODIFY ("USUARIO" NOT NULL ENABLE);
  ALTER TABLE "USUARIO" MODIFY ("AP_MATERENO" NOT NULL ENABLE);
  ALTER TABLE "USUARIO" MODIFY ("AP_PATERNO" NOT NULL ENABLE);
  ALTER TABLE "USUARIO" MODIFY ("NOMBRE" NOT NULL ENABLE);
  ALTER TABLE "USUARIO" MODIFY ("RUT" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table AERONAVE
--------------------------------------------------------

  ALTER TABLE "AERONAVE" ADD CONSTRAINT "AERONAVE_TIPO_AERONAVE_FK" FOREIGN KEY ("ID_TIPO_AERONAVE")
	  REFERENCES "TIPO_AERONAVE" ("ID_TIPO_AERONAVE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CIUDAD
--------------------------------------------------------

  ALTER TABLE "CIUDAD" ADD CONSTRAINT "CIUDAD_REGION_FK" FOREIGN KEY ("ID_REGION")
	  REFERENCES "REGION" ("ID_REGION") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table COMPONENTE
--------------------------------------------------------

  ALTER TABLE "COMPONENTE" ADD CONSTRAINT "COMPONENTES_AERONAVE_FK" FOREIGN KEY ("AERONAVE_MATRICULA")
	  REFERENCES "AERONAVE" ("MATRICULA") ENABLE;
  ALTER TABLE "COMPONENTE" ADD CONSTRAINT "COMPONENTES_COMPONENTES_FK" FOREIGN KEY ("ID_PADRE")
	  REFERENCES "COMPONENTE" ("ID_COMPENTE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LICENCIA
--------------------------------------------------------

  ALTER TABLE "LICENCIA" ADD CONSTRAINT "LICENCIA_PERSONA_FK" FOREIGN KEY ("PERSONA_RUT")
	  REFERENCES "USUARIO" ("RUT") ENABLE;
  ALTER TABLE "LICENCIA" ADD CONSTRAINT "LICENCIA_TIPO_LICENCIA_FK" FOREIGN KEY ("ID_TIPO_LICENCIA")
	  REFERENCES "TIPO_LICENCIA" ("ID_TIPO_LICENCIA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MANTENIMIENTO_AERONAVE
--------------------------------------------------------

  ALTER TABLE "MANTENIMIENTO_AERONAVE" ADD CONSTRAINT "AERONAVE_MATRICULA" FOREIGN KEY ("MATRICULA_AERONAVE")
	  REFERENCES "AERONAVE" ("MATRICULA") ENABLE;
  ALTER TABLE "MANTENIMIENTO_AERONAVE" ADD CONSTRAINT "ID_ENCARGADO" FOREIGN KEY ("RUT_ENCARGADO")
	  REFERENCES "USUARIO" ("RUT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MANTENIMIENTO_COMPONENTE
--------------------------------------------------------

  ALTER TABLE "MANTENIMIENTO_COMPONENTE" ADD CONSTRAINT "COMPONENTE_ID" FOREIGN KEY ("ID_COMPONENTE")
	  REFERENCES "COMPONENTE" ("ID_COMPENTE") ENABLE;
  ALTER TABLE "MANTENIMIENTO_COMPONENTE" ADD CONSTRAINT "RUT_ENCARGADO" FOREIGN KEY ("RUT_ENCARGADO")
	  REFERENCES "USUARIO" ("RUT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REGION
--------------------------------------------------------

  ALTER TABLE "REGION" ADD CONSTRAINT "REGION_PAIS_FK" FOREIGN KEY ("ID_PAIS")
	  REFERENCES "PAIS" ("ID_PAIS") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TRIPULACION
--------------------------------------------------------

  ALTER TABLE "TRIPULACION" ADD CONSTRAINT "RUT_PILOTO" FOREIGN KEY ("RUT_PILOTO")
	  REFERENCES "USUARIO" ("RUT") ENABLE;
  ALTER TABLE "TRIPULACION" ADD CONSTRAINT "SEG_VUELO_VUELO_FK" FOREIGN KEY ("VUELO_ID_VUELO")
	  REFERENCES "VUELO" ("ID_VUELO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USUARIO
--------------------------------------------------------

  ALTER TABLE "USUARIO" ADD CONSTRAINT "PERSONA_ROL_FK" FOREIGN KEY ("ROL_ID_ROL")
	  REFERENCES "ROL" ("ID_ROL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VUELO
--------------------------------------------------------

  ALTER TABLE "VUELO" ADD CONSTRAINT "VUELO_AERONAVE_FK" FOREIGN KEY ("AERONAVE_MATRICULA")
	  REFERENCES "AERONAVE" ("MATRICULA") ENABLE;
  ALTER TABLE "VUELO" ADD CONSTRAINT "VUELO_CONDICION_VUELO_FK" FOREIGN KEY ("CONDICION_VUELO_ID_CONDICION")
	  REFERENCES "CONDICION_VUELO" ("ID_CONDICION") ENABLE;
  ALTER TABLE "VUELO" ADD CONSTRAINT "VUELO_DESTINO_FK" FOREIGN KEY ("ID_DESTINO_CIUDAD")
	  REFERENCES "CIUDAD" ("ID_CIUDAD") ENABLE;
  ALTER TABLE "VUELO" ADD CONSTRAINT "VUELO_ORIGEN_FK" FOREIGN KEY ("ID_ORIGEN_CIUDAD")
	  REFERENCES "CIUDAD" ("ID_CIUDAD") ENABLE;
--------------------------------------------------------
--  DDL for Trigger ACTUALIZAR_ESTADO_USUARIO
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ACTUALIZAR_ESTADO_USUARIO" 
        FOR UPDATE  ON LICENCIA
        COMPOUND TRIGGER
    Nfecha_exp LICENCIA.FECHA_EXPIRACION%TYPE;
    NRUT LICENCIA.PERSONA_RUT%TYPE;
    -- Se lanzará después de cada fila actualizada
    AFTER EACH ROW IS
    BEGIN
        dbms_output.put_line('Se realizó la actualización');
        NRUT := :old.PERSONA_RUT;
        Nfecha_exp := :new.FECHA_EXPIRACION;
        dbms_output.put_line('neuvo: '||NRUT);
    END AFTER EACH ROW;

    -- Se lanzará después de la sentencia
    AFTER STATEMENT IS
    BEGIN  
    if(Nfecha_exp<sysdate)THEN
       UPDATE USUARIO SET ESTADO='DESACTIVADO'
        WHERE RUT = NRUT;
        dbms_output.put_line('rut: '||NRUT);
        else 
        UPDATE USUARIO SET ESTADO='ACTIVO'
        WHERE RUT = NRUT;
        dbms_output.put_line('rut: '||NRUT);
        END IF;
    END AFTER STATEMENT;
END ACTUALIZAR_ESTADO_USUARIO;
/
ALTER TRIGGER "ACTUALIZAR_ESTADO_USUARIO" DISABLE;
--------------------------------------------------------
--  DDL for Trigger CIUDAD_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "CIUDAD_TRG" 
BEFORE INSERT ON CIUDAD 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "CIUDAD_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger COMPONENTES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "COMPONENTES_TRG" 
BEFORE INSERT ON COMPONENTE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "COMPONENTES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CONDICION_VUELO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "CONDICION_VUELO_TRG" 
BEFORE INSERT ON CONDICION_VUELO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_CONDICION IS NULL THEN
      SELECT CONDICION_VUELO_SEQ.NEXTVAL INTO :NEW.ID_CONDICION FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "CONDICION_VUELO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LICENCIA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "LICENCIA_TRG" 
BEFORE INSERT ON LICENCIA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_LICENCIA IS NULL THEN
      SELECT LICENCIA_SEQ.NEXTVAL INTO :NEW.ID_LICENCIA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "LICENCIA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MANTENIMIENTO_AERONAVE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MANTENIMIENTO_AERONAVE_TRG" 
BEFORE INSERT ON MANTENIMIENTO_AERONAVE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_MANTENIMIENTO_AERONAVE IS NULL THEN
      SELECT MANTENIMIENTO_AERONAVE_SEQ.NEXTVAL INTO :NEW.ID_MANTENIMIENTO_AERONAVE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "MANTENIMIENTO_AERONAVE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MANTENIMIENTO_COMPONENTE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MANTENIMIENTO_COMPONENTE_TRG" 
BEFORE INSERT ON MANTENIMIENTO_COMPONENTE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_MANTENIMIENTO_COMPONENTE IS NULL THEN
      SELECT MANTENIMIENTO_COMPONENTE_SEQ.NEXTVAL INTO :NEW.ID_MANTENIMIENTO_COMPONENTE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "MANTENIMIENTO_COMPONENTE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PAIS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PAIS_TRG" 
BEFORE INSERT ON PAIS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "PAIS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REGION_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "REGION_TRG" 
BEFORE INSERT ON REGION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "REGION_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ROL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ROL_TRG" 
BEFORE INSERT ON ROL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_ROL IS NULL THEN
      SELECT ROL_SEQ.NEXTVAL INTO :NEW.ID_ROL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "ROL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TIPO_AERONAVE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TIPO_AERONAVE_TRG" 
BEFORE INSERT ON TIPO_AERONAVE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_TIPO_AERONAVE IS NULL THEN
      SELECT TIPO_AERONAVE_SEQ.NEXTVAL INTO :NEW.ID_TIPO_AERONAVE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TIPO_AERONAVE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TIPO_LICENCIA_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TIPO_LICENCIA_TRG" 
BEFORE INSERT ON TIPO_LICENCIA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_TIPO_LICENCIA IS NULL THEN
      SELECT TIPO_LICENCIA_SEQ1.NEXTVAL INTO :NEW.ID_TIPO_LICENCIA FROM SYS.DUAL;
    END IF;
    IF INSERTING AND :NEW.NOMBRE IS NULL THEN
      SELECT TIPO_LICENCIA_SEQ.NEXTVAL INTO :NEW.NOMBRE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TIPO_LICENCIA_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRIPULACION_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TRIPULACION_TRG" 
BEFORE INSERT ON TRIPULACION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT TRIPULACION_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "TRIPULACION_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VUELO_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "VUELO_TRG" 
BEFORE INSERT ON VUELO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "VUELO_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VUELO_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "VUELO_TRG1" 
BEFORE INSERT ON VUELO 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_VUELO IS NULL THEN
      SELECT VUELO_SEQ1.NEXTVAL INTO :NEW.ID_VUELO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "VUELO_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Procedure AERONAVE_SELECT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "AERONAVE_SELECT" (tipo_aeronave_var IN TIPO_AERONAVE.NOMBRE_TIPO%TYPE,matricula_var IN AERONAVE.MATRICULA%TYPE, p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
select 
aeronave.MATRICULA as "Matricula",
aeronave.MARCA as "Marca",
tipo.NOMBRE_TIPO as "Tipo de aeronave", 
TO_CHAR(aeronave.FECHA_VENCIMIENTO_DGAC,'DD/MON/YYYY') as "Venc certificado DGAC",
aeronave.HORAS_DE_VUELO ||' Hrs' as "Horas de vuelo",
aeronave.KMPORHORAS ||' Km/h' as "Velocidad Max", 
aeronave.ESTADO_AERONAVE  as "Estado"
FROM 
AERONAVE aeronave, TIPO_AERONAVE tipo 
where 
tipo.ID_TIPO_AERONAVE=aeronave.ID_TIPO_AERONAVE 
and aeronave.ESTADO_AERONAVE='OPERATIVA'
and tipo.NOMBRE_TIPO like tipo_aeronave_var
and aeronave.Matricula like matricula_var
order by tipo.NOMBRE_TIPO;
end;

/
--------------------------------------------------------
--  DDL for Procedure AERONAVE_TIPO_SELECT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "AERONAVE_TIPO_SELECT" (p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
SELECT * from TIPO_AERONAVE;
end;

/
--------------------------------------------------------
--  DDL for Procedure CIUDAD_SELECT_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "CIUDAD_SELECT_ALL" (p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
  SELECT 
   ID_CIUDAD, NOMBRE_CIUDAD FROM CIUDAD;
end;

/
--------------------------------------------------------
--  DDL for Procedure CIUDAD_SELECT_DESTINO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "CIUDAD_SELECT_DESTINO" (id IN CIUDAD.ID_CIUDAD%TYPE, p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
  SELECT 
   ID_CIUDAD, NOMBRE_CIUDAD FROM CIUDAD WHERE ID_CIUDAD != id;
end;

/
--------------------------------------------------------
--  DDL for Procedure GET_COORDENADAS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GET_COORDENADAS" (origen_id IN CIUDAD.ID_CIUDAD%TYPE,destino_id IN CIUDAD.ID_CIUDAD%TYPE, p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
 select 
 LATITUD,LONGITUD 
 from ciudad 
 where ID_CIUDAD=origen_id or ID_CIUDAD=destino_id;
end;

/
--------------------------------------------------------
--  DDL for Procedure MANTENCION_BY_MATRICULA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MANTENCION_BY_MATRICULA" (matricula_nave_var IN MANTENIMIENTO_AERONAVE.MATRICULA_AERONAVE%TYPE, p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
SELECT
mant.MATRICULA_AERONAVE as "Matricula",
mant.FECHA_INSPECCION as "Inspeccion",
mant.ESTADO as "Estado",
mant.RUT_ENCARGADO as "Encargado"
FROM
MANTENIMIENTO_AERONAVE mant
where mant.MATRICULA_AERONAVE like matricula_nave_var
ORDER BY mant.MATRICULA_AERONAVE;
end;

/
--------------------------------------------------------
--  DDL for Procedure PILOTO_SELECT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "PILOTO_SELECT" 

(rut_var IN USUARIO.RUT%TYPE,
nombre_var IN USUARIO.NOMBRE%TYPE,
tipo_var IN TIPO_LICENCIA.NOMBRE%TYPE, 
p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
SELECT DISTINCT US.RUT AS "Rut",
US.NOMBRE||' '||US.AP_PATERNO||' '||SUBSTR(US.AP_MATERENO,0,1)||'.' AS "Nombre",
TO_CHAR(US.FECHA_MEDICINA_AEROESPACIAL,'DD/MON/YYYY') AS "Venc Med Aeroespacial",
TL.NOMBRE AS "Tipo de licencia",
TO_CHAR(LI.FECHA_EMISION,'DD/MON/YYYY') AS "Emis Licencia",
TO_CHAR(LI.FECHA_EXPIRACION,'DD/MON/YYYY') AS "Venc Licencia",
US.ESTADO AS "Estado"
FROM USUARIO US, LICENCIA LI, TIPO_LICENCIA TL
WHERE US.RUT = LI.PERSONA_RUT
AND LI.ID_TIPO_LICENCIA= TL.ID_TIPO_LICENCIA
AND US.ROL_ID_ROL = 3
AND US.FECHA_MEDICINA_AEROESPACIAL IS NOT NULL
AND US.FECHA_MEDICINA_AEROESPACIAL > sysdate
AND LI.FECHA_EXPIRACION > sysdate
AND US.ESTADO = 'ACTIVO'
AND LI.ESTADO_VIGENCIA = 't'
AND US.NOMBRE like nombre_var
AND US.RUT like rut_var
AND TL.NOMBRE  like tipo_var
order by TL.NOMBRE ;
end;

/
--------------------------------------------------------
--  DDL for Procedure PILOTO_TIPO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "PILOTO_TIPO" 
( tipo_var IN TIPO_AERONAVE.NOMBRE_TIPO%TYPE,
p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
select ID_TIPO_LICENCIA,NOMBRE from TIPO_LICENCIA
WHERE NOMBRE LIKE tipo_var;
end;

/
--------------------------------------------------------
--  DDL for Procedure ROL_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ROL_DELETE" (rol_id IN ROL.ID_ROL%type,resp OUT NUMBER)
AS
x InTEGER;
begin
SELECT count(*) INTO x from ROL
WHERE ID_ROL = rol_id;
IF x > 0 THEN
  DELETE ROL
   WHERE ID_ROL=rol_id;
  resp:=0;
 ELSE
  resp:=-1;
  end if;
end;

/
--------------------------------------------------------
--  DDL for Procedure ROL_INGRESAR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ROL_INGRESAR" (rol_id IN ROL.ID_ROL%type, rol_nombre IN ROL.NOMBRE_ROL%type, rol_descripcion IN ROL.DESCRIPCION%type, resp OUT NUMBER)
AS
x InTEGER;
begin
SELECT count(*) INTO x from ROL
WHERE ID_ROL = rol_id;
IF x = 0 THEN
  INSERT INTO rol
  values (rol_id,rol_nombre, rol_descripcion);
  resp:=0;
  ELSE
  resp:=-1;
  end if;
end;

/
--------------------------------------------------------
--  DDL for Procedure ROL_SELECT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ROL_SELECT" (rol_id IN ROL.ID_ROL%type, resp OUT NUMBER, p_recordset OUT SYS_REFCURSOR)
AS
x InTEGER;
begin
SELECT count(*) INTO x from ROL
WHERE ID_ROL = rol_id;
IF x > 0 THEN
OPEN p_recordset FOR
  SELECT 
   NOMBRE_ROL, DESCRIPCION FROM ROL WHERE ID_ROL=rol_id;
  resp:=0;
  ELSE
  resp:=-1;
  end if;

end;

/
--------------------------------------------------------
--  DDL for Procedure ROL_SELECT_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ROL_SELECT_ALL" (resp OUT NUMBER, p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
  SELECT 
   NOMBRE_ROL, DESCRIPCION FROM ROL;
  resp:=0;
EXCEPTION
WHEN NO_DATA_FOUND THEN
  resp:=-1;
end;

/
--------------------------------------------------------
--  DDL for Procedure ROL_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "ROL_UPDATE" (rol_id IN ROL.ID_ROL%type, rol_nombre IN ROL.NOMBRE_ROL
%type, rol_descripcion IN ROL.DESCRIPCION%type,resp OUT NUMBER)
AS
x InTEGER;
begin
SELECT count(*) INTO x from ROL
WHERE ID_ROL = rol_id;
IF x > 0 THEN
  UPDATE ROL
  SET NOMBRE_ROL=rol_nombre,
   DESCRIPCION =rol_descripcion
   WHERE ID_ROL=rol_id;
  resp:=0;
 ELSE
  resp:=-1;
  end if;
end;

/
--------------------------------------------------------
--  DDL for Procedure TRIPULACION_INGRESAR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TRIPULACION_INGRESAR" 
(
    var_cantHoras IN TRIPULACION.CANT_HORAS_VUELO%TYPE,
    var_rutPiloto IN TRIPULACION.RUT_PILOTO%TYPE, 
    var_puesto IN TRIPULACION.PUESTO%TYPE
) as 
var_idVuelo TRIPULACION.VUELO_ID_VUELO%TYPE; 
BEGIN
SELECT ID_VUELO INTO var_idVuelo
from (select * from vuelo 
order by ID_VUELO desc ) 
where rownum = 1 ; 
INSERT INTO TRIPULACION
(CANT_HORAS_VUELO,
VUELO_ID_VUELO,
RUT_PILOTO,
PUESTO
)
VALUES
(
var_cantHoras,
var_idVuelo,
var_rutPiloto,
var_puesto
);
end;

/
--------------------------------------------------------
--  DDL for Procedure USUARIO_DELETE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "USUARIO_DELETE" (p_rut IN USUARIO.RUT%TYPE,resp OUT NUMBER) AS
res INTEGER;
BEGIN
SELECT count(*) INTO res from usuario
where usuario.rut = p_rut;
IF res > 0 THEN
DELETE usuario 
where usuario.rut = p_rut;
   resp:=0;
 ELSE
  resp:=-1;
  end if;
END;

/
--------------------------------------------------------
--  DDL for Procedure USUARIO_INGRESAR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "USUARIO_INGRESAR" 
(
    P_rut IN usuario.rut%type,
    P_nombre IN usuario.nombre%TYPE, 
    P_ap_paterno IN usuario.ap_paterno%TYPE, 
    P_ap_materno IN usuario.ap_matereno%TYPE, 
    P_user IN usuario.usuario%TYPE,
    P_pass IN usuario.pass%TYPE,
    P_correo IN usuario.correo%TYPE,
    P_rol IN usuario.rol_id_rol%TYPE,
    resp OUT NUMBER
) as 
res INTEGER;
begin
SELECT count(*) INTO res from usuario
WHERE RUT = P_rut;
IF res = 0 THEN
INSERT INTO usuario (rut,nombre,ap_paterno,ap_matereno,usuario,pass,correo,rol_id_rol) 
VALUES (P_rut,P_nombre, P_ap_paterno, P_ap_materno,P_user, P_pass, P_correo,P_rol);
  resp:=0;
ELSE
  resp:=-1;
end if;
end;

/
--------------------------------------------------------
--  DDL for Procedure USUARIO_LOGIN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "USUARIO_LOGIN" 
( 
    P_user IN usuario.usuario%TYPE,
    P_pass IN usuario.pass%TYPE,
    resp OUT NUMBER,
    p_recordset OUT SYS_REFCURSOR
) as 
res INTEGER;
id_rol INTEGER;
begin
SELECT count(*) INTO res from usuario us
WHERE us.USUARIO = P_user
AND us.PASS = P_pass
AND us.ESTADO='ACTIVO';
IF res > 0 THEN
OPEN p_recordset FOR
 SELECT 
   US.NOMBRE,US.AP_PATERNO,US.AP_MATERENO,US.USUARIO,US.CORREO,ROL.NOMBRE_ROL,ROL.ID_ROL
   FROM USUARIO US,ROL
   WHERE US.ROL_ID_ROL=ROL.ID_ROL AND
   US.USUARIO=P_user;
  SELECT ROL.ID_ROL INTO id_rol FROM ROL,USUARIO US WHERE US.ROL_ID_ROL=ROL.ID_ROL AND US.USUARIO=P_user;
  resp:=id_rol;
ELSE
  resp:=-1;
  SELECT count(*) INTO res from usuario us
  WHERE us.USUARIO = P_user
  AND us.PASS = P_pass
  AND us.ESTADO='DESACTIVADO';
  IF  res > 0 THEN
  resp:=-2;
  END IF;
end if;
end;

/
--------------------------------------------------------
--  DDL for Procedure USUARIO_SELECT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "USUARIO_SELECT" (p_rut IN USUARIO.RUT%TYPE, resp OUT NUMBER, p_recordset OUT SYS_REFCURSOR)
AS
x InTEGER;
begin
SELECT count(*) INTO x from USUARIO
WHERE USUARIO.RUT = p_rut;
IF x > 0 THEN
OPEN p_recordset FOR
 SELECT 
   US.NOMBRE,US.AP_PATERNO,US.AP_MATERENO,US.USUARIO,US.CORREO,ROL.NOMBRE_ROL 
   FROM USUARIO US,ROL
   WHERE US.ROL_ID_ROL=ROL.ID_ROL AND
   US.RUT = p_rut;
  resp:=0;
  ELSE
  resp:=-1;
  end if;
end;

/
--------------------------------------------------------
--  DDL for Procedure USUARIO_SELECT_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "USUARIO_SELECT_ALL" (resp OUT NUMBER, p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
 SELECT 
   NOMBRE,AP_PATERNO,AP_MATERENO,USUARIO,CORREO,ROL.NOMBRE_ROL 
   FROM USUARIO,ROL
   WHERE USUARIO.ROL_ID_ROL=ROL.ID_ROL;
  resp:=0;
EXCEPTION
WHEN NO_DATA_FOUND THEN
  resp:=-1;
end;

/
--------------------------------------------------------
--  DDL for Procedure USUARIO_UPDATE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "USUARIO_UPDATE" (   P_rut IN USUARIO.rut%TYPE,
                                 P_nombre IN USUARIO.nombre%TYPE, 
                                 P_ap_paterno IN USUARIO.ap_paterno%TYPE,
                                 P_ap_materno IN USUARIO.ap_matereno%TYPE, 
                                 P_user IN USUARIO.usuario%type,
                                 P_pass IN USUARIO.pass%TYPE,
                                 P_correo IN USUARIO.correo%TYPE,
                                 resp OUT NUMBER) AS
x INTEGER;
BEGIN
SELECT count(*) INTO x from USUARIO
where RUT = P_rut;
IF x > 0 THEN
update USUARIO set nombre = p_nombre,
                   ap_paterno = p_ap_paterno,
                    ap_matereno = p_ap_materno,
                    usuario = p_user,
                    pass = p_pass,
                    correo = p_correo

where RUT = P_rut;
  resp:=0;
 ELSE
  resp:=-1;
  end if;
END;

/
--------------------------------------------------------
--  DDL for Procedure VER_LICENCIA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "VER_LICENCIA" 

(rut_var IN USUARIO.RUT%TYPE,
p_recordset OUT SYS_REFCURSOR)
AS
begin
OPEN p_recordset FOR
select  
TO_CHAR(LI.FECHA_EMISION,'DD-MON-YYYY') AS "Fecha Emision",
TO_CHAR(LI.FECHA_EXPIRACION,'DD-MON-YYYY') AS "Venc. Licencia",
TL.NOMBRE AS "Tipo de licencia"
FROM LICENCIA LI, TIPO_LICENCIA TL,
USUARIO US
WHERE US.RUT = LI.PERSONA_RUT
AND LI.ID_TIPO_LICENCIA= TL.ID_TIPO_LICENCIA
AND US.RUT=rut_var
AND LI.ESTADO_VIGENCIA='t';
end;

/
--------------------------------------------------------
--  DDL for Procedure VUELO_INGRESAR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "VUELO_INGRESAR" 
(
    var_fechaSalida IN VUELO.FECHA_SALIDA%TYPE,
    var_fechaArribo IN VUELO.FECHA_ARRIBO%TYPE, 
    var_tiempoTotal IN VUELO.TOTAL_TIEMPO%TYPE, 
    var_idCondicion IN VUELO.CONDICION_VUELO_ID_CONDICION%TYPE, 
    var_matriculaAeronave IN VUELO.AERONAVE_MATRICULA%TYPE,
    var_idOrigen IN VUELO.ID_ORIGEN_CIUDAD%TYPE,
    var_idDestino IN VUELO.ID_DESTINO_CIUDAD%TYPE,
    var_estado IN VUELO.ESTADO%TYPE,
    var_kilometros IN VUELO.KILOMETROS%TYPE
) as 
res INTEGER;
BEGIN
INSERT INTO VUELO 
(FECHA_SALIDA,
FECHA_ARRIBO,
TOTAL_TIEMPO,
CONDICION_VUELO_ID_CONDICION,
AERONAVE_MATRICULA,
ID_ORIGEN_CIUDAD,
ID_DESTINO_CIUDAD,
ESTADO,
KILOMETROS)
VALUES
(var_fechaSalida,
var_fechaArribo,
var_tiempoTotal,
var_idCondicion,
var_matriculaAeronave,
var_idOrigen,
var_idDestino,
var_estado,
var_kilometros);
end;

/
